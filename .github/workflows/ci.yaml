name: CI
on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
  pull_request:
    branches: [ "main" ]
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          cache: 'npm'
      - name: Install npm modules
        run: npm install
      - name: Run ESLint
        run: npm run lint

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          cache: 'npm'
      - run: npm install
      - run: docker compose -f ./docker-compose.yml up -d
      - run: npx wait-on tcp:9092
      - run: npm run test

  build:
    needs: ['lint']
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Install npm modules
        run: npm install
      - name: Build package
        run: npm run build

  publish-npm:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: https://registry.npmjs.org/
#      - id: check
#        uses: EndBug/version-check@v1
#        with:
#          file-url: https://unpkg.com/nest-memory-transport@1.0.0/package.json
#          static-checking: localIsNew
#      - if: steps.check.outputs.changed == 'true'
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}